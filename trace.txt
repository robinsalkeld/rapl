(mirajTrace (list (call (quote fact_loop) (numV 0) (e*s (list (funC (quote fact_loop) (quote x) (letVarC (quote in) (readC "x") (ifZeroOrLessC (varC (quote in)) (varC (quote in)) (seqC (writeC "fact(x)" (appC (quote fact) (varC (quote in)))) (seqC (setC (quote inputs) (plusC (varC (quote inputs)) (numC 1))) (appC (quote fact_loop) (varC (quote in)))))))) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1)))))) (bindC (quote inputs) 0)) (list (cell 0 (numV 0))))) (call (quote fact) (numV 3) (e*s (list (bindC (quote in) 2) (bindC (quote x) 1) (funC (quote fact_loop) (quote x) (letVarC (quote in) (readC "x") (ifZeroOrLessC (varC (quote in)) (varC (quote in)) (seqC (writeC "fact(x)" (appC (quote fact) (varC (quote in)))) (seqC (setC (quote inputs) (plusC (varC (quote inputs)) (numC 1))) (appC (quote fact_loop) (varC (quote in)))))))) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1)))))) (bindC (quote inputs) 0)) (list (cell 2 (numV 3)) (cell 1 (numV 0)) (cell 0 (numV 0))))) (call (quote fact) (numV 2) (e*s (list (bindC (quote x) 3) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1)))))) (bindC (quote inputs) 0)) (list (cell 3 (numV 3)) (cell 2 (numV 3)) (cell 1 (numV 0)) (cell 0 (numV 0))))) (call (quote fact) (numV 1) (e*s (list (bindC (quote x) 4) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1)))))) (bindC (quote inputs) 0)) (list (cell 4 (numV 2)) (cell 3 (numV 3)) (cell 2 (numV 3)) (cell 1 (numV 0)) (cell 0 (numV 0))))) (call (quote fact) (numV 0) (e*s (list (bindC (quote x) 5) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1)))))) (bindC (quote inputs) 0)) (list (cell 5 (numV 1)) (cell 4 (numV 2)) (cell 3 (numV 3)) (cell 2 (numV 3)) (cell 1 (numV 0)) (cell 0 (numV 0))))) (return (quote fact) (numV 1) (e*s (list (bindC (quote x) 5) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1)))))) (bindC (quote inputs) 0)) (list (cell 6 (numV 0)) (cell 5 (numV 1)) (cell 4 (numV 2)) (cell 3 (numV 3)) (cell 2 (numV 3)) (cell 1 (numV 0)) (cell 0 (numV 0))))) (return (quote fact) (numV 1) (e*s (list (bindC (quote x) 4) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1)))))) (bindC (quote inputs) 0)) (list (cell 6 (numV 0)) (cell 5 (numV 1)) (cell 4 (numV 2)) (cell 3 (numV 3)) (cell 2 (numV 3)) (cell 1 (numV 0)) (cell 0 (numV 0))))) (return (quote fact) (numV 2) (e*s (list (bindC (quote x) 3) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1)))))) (bindC (quote inputs) 0)) (list (cell 6 (numV 0)) (cell 5 (numV 1)) (cell 4 (numV 2)) (cell 3 (numV 3)) (cell 2 (numV 3)) (cell 1 (numV 0)) (cell 0 (numV 0))))) (return (quote fact) (numV 6) (e*s (list (bindC (quote in) 2) (bindC (quote x) 1) (funC (quote fact_loop) (quote x) (letVarC (quote in) (readC "x") (ifZeroOrLessC (varC (quote in)) (varC (quote in)) (seqC (writeC "fact(x)" (appC (quote fact) (varC (quote in)))) (seqC (setC (quote inputs) (plusC (varC (quote inputs)) (numC 1))) (appC (quote fact_loop) (varC (quote in)))))))) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1)))))) (bindC (quote inputs) 0)) (list (cell 6 (numV 0)) (cell 5 (numV 1)) (cell 4 (numV 2)) (cell 3 (numV 3)) (cell 2 (numV 3)) (cell 1 (numV 0)) (cell 0 (numV 0))))) (call (quote fact_loop) (numV 3) (e*s (list (bindC (quote in) 2) (bindC (quote x) 1) (funC (quote fact_loop) (quote x) (letVarC (quote in) (readC "x") (ifZeroOrLessC (varC (quote in)) (varC (quote in)) (seqC (writeC "fact(x)" (appC (quote fact) (varC (quote in)))) (seqC (setC (quote inputs) (plusC (varC (quote inputs)) (numC 1))) (appC (quote fact_loop) (varC (quote in)))))))) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1)))))) (bindC (quote inputs) 0)) (list (cell 0 (numV 1)) (cell 6 (numV 0)) (cell 5 (numV 1)) (cell 4 (numV 2)) (cell 3 (numV 3)) (cell 2 (numV 3)) (cell 1 (numV 0)) (cell 0 (numV 0))))) (call (quote fact) (numV 5) (e*s (list (bindC (quote in) 9) (bindC (quote x) 8) (funC (quote fact_loop) (quote x) (letVarC (quote in) (readC "x") (ifZeroOrLessC (varC (quote in)) (varC (quote in)) (seqC (writeC "fact(x)" (appC (quote fact) (varC (quote in)))) (seqC (setC (quote inputs) (plusC (varC (quote inputs)) (numC 1))) (appC (quote fact_loop) (varC (quote in)))))))) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1)))))) (bindC (quote inputs) 0)) (list (cell 9 (numV 5)) (cell 8 (numV 3)) (cell 0 (numV 1)) (cell 6 (numV 0)) (cell 5 (numV 1)) (cell 4 (numV 2)) (cell 3 (numV 3)) (cell 2 (numV 3)) (cell 1 (numV 0)) (cell 0 (numV 0))))) (call (quote fact) (numV 4) (e*s (list (bindC (quote x) 10) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1)))))) (bindC (quote inputs) 0)) (list (cell 10 (numV 5)) (cell 9 (numV 5)) (cell 8 (numV 3)) (cell 0 (numV 1)) (cell 6 (numV 0)) (cell 5 (numV 1)) (cell 4 (numV 2)) (cell 3 (numV 3)) (cell 2 (numV 3)) (cell 1 (numV 0)) (cell 0 (numV 0))))) (call (quote fact) (numV 3) (e*s (list (bindC (quote x) 11) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1)))))) (bindC (quote inputs) 0)) (list (cell 11 (numV 4)) (cell 10 (numV 5)) (cell 9 (numV 5)) (cell 8 (numV 3)) (cell 0 (numV 1)) (cell 6 (numV 0)) (cell 5 (numV 1)) (cell 4 (numV 2)) (cell 3 (numV 3)) (cell 2 (numV 3)) (cell 1 (numV 0)) (cell 0 (numV 0))))) (call (quote fact) (numV 2) (e*s (list (bindC (quote x) 12) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1)))))) (bindC (quote inputs) 0)) (list (cell 12 (numV 3)) (cell 11 (numV 4)) (cell 10 (numV 5)) (cell 9 (numV 5)) (cell 8 (numV 3)) (cell 0 (numV 1)) (cell 6 (numV 0)) (cell 5 (numV 1)) (cell 4 (numV 2)) (cell 3 (numV 3)) (cell 2 (numV 3)) (cell 1 (numV 0)) (cell 0 (numV 0))))) (call (quote fact) (numV 1) (e*s (list (bindC (quote x) 13) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1)))))) (bindC (quote inputs) 0)) (list (cell 13 (numV 2)) (cell 12 (numV 3)) (cell 11 (numV 4)) (cell 10 (numV 5)) (cell 9 (numV 5)) (cell 8 (numV 3)) (cell 0 (numV 1)) (cell 6 (numV 0)) (cell 5 (numV 1)) (cell 4 (numV 2)) (cell 3 (numV 3)) (cell 2 (numV 3)) (cell 1 (numV 0)) (cell 0 (numV 0))))) (call (quote fact) (numV 0) (e*s (list (bindC (quote x) 14) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1)))))) (bindC (quote inputs) 0)) (list (cell 14 (numV 1)) (cell 13 (numV 2)) (cell 12 (numV 3)) (cell 11 (numV 4)) (cell 10 (numV 5)) (cell 9 (numV 5)) (cell 8 (numV 3)) (cell 0 (numV 1)) (cell 6 (numV 0)) (cell 5 (numV 1)) (cell 4 (numV 2)) (cell 3 (numV 3)) (cell 2 (numV 3)) (cell 1 (numV 0)) (cell 0 (numV 0))))) (return (quote fact) (numV 1) (e*s (list (bindC (quote x) 14) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1)))))) (bindC (quote inputs) 0)) (list (cell 15 (numV 0)) (cell 14 (numV 1)) (cell 13 (numV 2)) (cell 12 (numV 3)) (cell 11 (numV 4)) (cell 10 (numV 5)) (cell 9 (numV 5)) (cell 8 (numV 3)) (cell 0 (numV 1)) (cell 6 (numV 0)) (cell 5 (numV 1)) (cell 4 (numV 2)) (cell 3 (numV 3)) (cell 2 (numV 3)) (cell 1 (numV 0)) (cell 0 (numV 0))))) (return (quote fact) (numV 1) (e*s (list (bindC (quote x) 13) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1)))))) (bindC (quote inputs) 0)) (list (cell 15 (numV 0)) (cell 14 (numV 1)) (cell 13 (numV 2)) (cell 12 (numV 3)) (cell 11 (numV 4)) (cell 10 (numV 5)) (cell 9 (numV 5)) (cell 8 (numV 3)) (cell 0 (numV 1)) (cell 6 (numV 0)) (cell 5 (numV 1)) (cell 4 (numV 2)) (cell 3 (numV 3)) (cell 2 (numV 3)) (cell 1 (numV 0)) (cell 0 (numV 0))))) (return (quote fact) (numV 2) (e*s (list (bindC (quote x) 12) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1)))))) (bindC (quote inputs) 0)) (list (cell 15 (numV 0)) (cell 14 (numV 1)) (cell 13 (numV 2)) (cell 12 (numV 3)) (cell 11 (numV 4)) (cell 10 (numV 5)) (cell 9 (numV 5)) (cell 8 (numV 3)) (cell 0 (numV 1)) (cell 6 (numV 0)) (cell 5 (numV 1)) (cell 4 (numV 2)) (cell 3 (numV 3)) (cell 2 (numV 3)) (cell 1 (numV 0)) (cell 0 (numV 0))))) (return (quote fact) (numV 6) (e*s (list (bindC (quote x) 11) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1)))))) (bindC (quote inputs) 0)) (list (cell 15 (numV 0)) (cell 14 (numV 1)) (cell 13 (numV 2)) (cell 12 (numV 3)) (cell 11 (numV 4)) (cell 10 (numV 5)) (cell 9 (numV 5)) (cell 8 (numV 3)) (cell 0 (numV 1)) (cell 6 (numV 0)) (cell 5 (numV 1)) (cell 4 (numV 2)) (cell 3 (numV 3)) (cell 2 (numV 3)) (cell 1 (numV 0)) (cell 0 (numV 0))))) (return (quote fact) (numV 24) (e*s (list (bindC (quote x) 10) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1)))))) (bindC (quote inputs) 0)) (list (cell 15 (numV 0)) (cell 14 (numV 1)) (cell 13 (numV 2)) (cell 12 (numV 3)) (cell 11 (numV 4)) (cell 10 (numV 5)) (cell 9 (numV 5)) (cell 8 (numV 3)) (cell 0 (numV 1)) (cell 6 (numV 0)) (cell 5 (numV 1)) (cell 4 (numV 2)) (cell 3 (numV 3)) (cell 2 (numV 3)) (cell 1 (numV 0)) (cell 0 (numV 0))))) (return (quote fact) (numV 120) (e*s (list (bindC (quote in) 9) (bindC (quote x) 8) (funC (quote fact_loop) (quote x) (letVarC (quote in) (readC "x") (ifZeroOrLessC (varC (quote in)) (varC (quote in)) (seqC (writeC "fact(x)" (appC (quote fact) (varC (quote in)))) (seqC (setC (quote inputs) (plusC (varC (quote inputs)) (numC 1))) (appC (quote fact_loop) (varC (quote in)))))))) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1)))))) (bindC (quote inputs) 0)) (list (cell 15 (numV 0)) (cell 14 (numV 1)) (cell 13 (numV 2)) (cell 12 (numV 3)) (cell 11 (numV 4)) (cell 10 (numV 5)) (cell 9 (numV 5)) (cell 8 (numV 3)) (cell 0 (numV 1)) (cell 6 (numV 0)) (cell 5 (numV 1)) (cell 4 (numV 2)) (cell 3 (numV 3)) (cell 2 (numV 3)) (cell 1 (numV 0)) (cell 0 (numV 0))))) (call (quote fact_loop) (numV 5) (e*s (list (bindC (quote in) 9) (bindC (quote x) 8) (funC (quote fact_loop) (quote x) (letVarC (quote in) (readC "x") (ifZeroOrLessC (varC (quote in)) (varC (quote in)) (seqC (writeC "fact(x)" (appC (quote fact) (varC (quote in)))) (seqC (setC (quote inputs) (plusC (varC (quote inputs)) (numC 1))) (appC (quote fact_loop) (varC (quote in)))))))) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1)))))) (bindC (quote inputs) 0)) (list (cell 0 (numV 2)) (cell 15 (numV 0)) (cell 14 (numV 1)) (cell 13 (numV 2)) (cell 12 (numV 3)) (cell 11 (numV 4)) (cell 10 (numV 5)) (cell 9 (numV 5)) (cell 8 (numV 3)) (cell 0 (numV 1)) (cell 6 (numV 0)) (cell 5 (numV 1)) (cell 4 (numV 2)) (cell 3 (numV 3)) (cell 2 (numV 3)) (cell 1 (numV 0)) (cell 0 (numV 0))))) (return (quote fact_loop) (numV 0) (e*s (list (bindC (quote in) 9) (bindC (quote x) 8) (funC (quote fact_loop) (quote x) (letVarC (quote in) (readC "x") (ifZeroOrLessC (varC (quote in)) (varC (quote in)) (seqC (writeC "fact(x)" (appC (quote fact) (varC (quote in)))) (seqC (setC (quote inputs) (plusC (varC (quote inputs)) (numC 1))) (appC (quote fact_loop) (varC (quote in)))))))) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1)))))) (bindC (quote inputs) 0)) (list (cell 18 (numV 0)) (cell 17 (numV 5)) (cell 0 (numV 2)) (cell 15 (numV 0)) (cell 14 (numV 1)) (cell 13 (numV 2)) (cell 12 (numV 3)) (cell 11 (numV 4)) (cell 10 (numV 5)) (cell 9 (numV 5)) (cell 8 (numV 3)) (cell 0 (numV 1)) (cell 6 (numV 0)) (cell 5 (numV 1)) (cell 4 (numV 2)) (cell 3 (numV 3)) (cell 2 (numV 3)) (cell 1 (numV 0)) (cell 0 (numV 0))))) (return (quote fact_loop) (numV 0) (e*s (list (bindC (quote in) 2) (bindC (quote x) 1) (funC (quote fact_loop) (quote x) (letVarC (quote in) (readC "x") (ifZeroOrLessC (varC (quote in)) (varC (quote in)) (seqC (writeC "fact(x)" (appC (quote fact) (varC (quote in)))) (seqC (setC (quote inputs) (plusC (varC (quote inputs)) (numC 1))) (appC (quote fact_loop) (varC (quote in)))))))) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1)))))) (bindC (quote inputs) 0)) (list (cell 18 (numV 0)) (cell 17 (numV 5)) (cell 0 (numV 2)) (cell 15 (numV 0)) (cell 14 (numV 1)) (cell 13 (numV 2)) (cell 12 (numV 3)) (cell 11 (numV 4)) (cell 10 (numV 5)) (cell 9 (numV 5)) (cell 8 (numV 3)) (cell 0 (numV 1)) (cell 6 (numV 0)) (cell 5 (numV 1)) (cell 4 (numV 2)) (cell 3 (numV 3)) (cell 2 (numV 3)) (cell 1 (numV 0)) (cell 0 (numV 0))))) (return (quote fact_loop) (numV 0) (e*s (list (funC (quote fact_loop) (quote x) (letVarC (quote in) (readC "x") (ifZeroOrLessC (varC (quote in)) (varC (quote in)) (seqC (writeC "fact(x)" (appC (quote fact) (varC (quote in)))) (seqC (setC (quote inputs) (plusC (varC (quote inputs)) (numC 1))) (appC (quote fact_loop) (varC (quote in)))))))) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1)))))) (bindC (quote inputs) 0)) (list (cell 18 (numV 0)) (cell 17 (numV 5)) (cell 0 (numV 2)) (cell 15 (numV 0)) (cell 14 (numV 1)) (cell 13 (numV 2)) (cell 12 (numV 3)) (cell 11 (numV 4)) (cell 10 (numV 5)) (cell 9 (numV 5)) (cell 8 (numV 3)) (cell 0 (numV 1)) (cell 6 (numV 0)) (cell 5 (numV 1)) (cell 4 (numV 2)) (cell 3 (numV 3)) (cell 2 (numV 3)) (cell 1 (numV 0)) (cell 0 (numV 0)))))) (v*s (numV 0) (list (cell 18 (numV 0)) (cell 17 (numV 5)) (cell 0 (numV 2)) (cell 15 (numV 0)) (cell 14 (numV 1)) (cell 13 (numV 2)) (cell 12 (numV 3)) (cell 11 (numV 4)) (cell 10 (numV 5)) (cell 9 (numV 5)) (cell 8 (numV 3)) (cell 0 (numV 1)) (cell 6 (numV 0)) (cell 5 (numV 1)) (cell 4 (numV 2)) (cell 3 (numV 3)) (cell 2 (numV 3)) (cell 1 (numV 0)) (cell 0 (numV 0)))))