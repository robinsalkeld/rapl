(mirajTrace (list (app-call (quote fact_loop) (closV (quote dummy) (letC (quote in) (readC "x") (ifZeroC (idC (quote in)) (idC (quote in)) (seqC (writeC "fact(x)" (appC (idC (quote fact)) (idC (quote in)))) (seqC (setboxC (idC (quote inputs)) (plusC (unboxC (idC (quote inputs))) (numC 1))) (appC (idC (quote fact_loop)) (idC (quote dummy))))))) (list (bind (quote fact_loop) 8) (bind (quote fact) 5) (bind (quote inputs) 1))) (numV 3) (list) (list (cell 8 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 7) (bind (quote f) 6)))) (cell 7 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 6)))) (cell 6 (closV (quote fact_loop) (labelC (quote fact_loop) (lamC (quote dummy) (letC (quote in) (readC "x") (ifZeroC (idC (quote in)) (idC (quote in)) (seqC (writeC "fact(x)" (appC (idC (quote fact)) (idC (quote in)))) (seqC (setboxC (idC (quote inputs)) (plusC (unboxC (idC (quote inputs))) (numC 1))) (appC (idC (quote fact_loop)) (idC (quote dummy))))))))) (list (bind (quote fact) 5) (bind (quote inputs) 1)))) (cell 5 (namedV (quote fact) (closV (quote x) (ifZeroC (idC (quote x)) (numC 1) (multC (idC (quote x)) (appC (idC (quote fact)) (plusC (idC (quote x)) (numC -1))))) (list (bind (quote fact) 4))))) (cell 4 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 3) (bind (quote f) 2)))) (cell 3 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 2)))) (cell 2 (closV (quote fact) (labelC (quote fact) (lamC (quote x) (ifZeroC (idC (quote x)) (numC 1) (multC (idC (quote x)) (appC (idC (quote fact)) (plusC (idC (quote x)) (numC -1))))))) (list))) (cell 1 (boxV 0)) (cell 0 (numV 0)))) (app-call (quote fact) (closV (quote x) (ifZeroC (idC (quote x)) (numC 1) (multC (idC (quote x)) (appC (idC (quote fact)) (plusC (idC (quote x)) (numC -1))))) (list (bind (quote fact) 4))) (numV 3) (list) (list (cell 10 (numV 3)) (cell 9 (numV 3)) (cell 8 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 7) (bind (quote f) 6)))) (cell 7 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 6)))) (cell 6 (closV (quote fact_loop) (labelC (quote fact_loop) (lamC (quote dummy) (letC (quote in) (readC "x") (ifZeroC (idC (quote in)) (idC (quote in)) (seqC (writeC "fact(x)" (appC (idC (quote fact)) (idC (quote in)))) (seqC (setboxC (idC (quote inputs)) (plusC (unboxC (idC (quote inputs))) (numC 1))) (appC (idC (quote fact_loop)) (idC (quote dummy))))))))) (list (bind (quote fact) 5) (bind (quote inputs) 1)))) (cell 5 (namedV (quote fact) (closV (quote x) (ifZeroC (idC (quote x)) (numC 1) (multC (idC (quote x)) (appC (idC (quote fact)) (plusC (idC (quote x)) (numC -1))))) (list (bind (quote fact) 4))))) (cell 4 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 3) (bind (quote f) 2)))) (cell 3 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 2)))) (cell 2 (closV (quote fact) (labelC (quote fact) (lamC (quote x) (ifZeroC (idC (quote x)) (numC 1) (multC (idC (quote x)) (appC (idC (quote fact)) (plusC (idC (quote x)) (numC -1))))))) (list))) (cell 1 (boxV 0)) (cell 0 (numV 0)))) (app-call (quote fact) (closV (quote x) (ifZeroC (idC (quote x)) (numC 1) (multC (idC (quote x)) (appC (idC (quote fact)) (plusC (idC (quote x)) (numC -1))))) (list (bind (quote fact) 14))) (numV 2) (list) (list (cell 14 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 13) (bind (quote f) 2)))) (cell 13 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 2)))) (cell 12 (numV 2)) (cell 11 (numV 3)) (cell 10 (numV 3)) (cell 9 (numV 3)) (cell 8 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 7) (bind (quote f) 6)))) (cell 7 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 6)))) (cell 6 (closV (quote fact_loop) (labelC (quote fact_loop) (lamC (quote dummy) (letC (quote in) (readC "x") (ifZeroC (idC (quote in)) (idC (quote in)) (seqC (writeC "fact(x)" (appC (idC (quote fact)) (idC (quote in)))) (seqC (setboxC (idC (quote inputs)) (plusC (unboxC (idC (quote inputs))) (numC 1))) (appC (idC (quote fact_loop)) (idC (quote dummy))))))))) (list (bind (quote fact) 5) (bind (quote inputs) 1)))) (cell 5 (namedV (quote fact) (closV (quote x) (ifZeroC (idC (quote x)) (numC 1) (multC (idC (quote x)) (appC (idC (quote fact)) (plusC (idC (quote x)) (numC -1))))) (list (bind (quote fact) 4))))) (cell 4 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 3) (bind (quote f) 2)))) (cell 3 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 2)))) (cell 2 (closV (quote fact) (labelC (quote fact) (lamC (quote x) (ifZeroC (idC (quote x)) (numC 1) (multC (idC (quote x)) (appC (idC (quote fact)) (plusC (idC (quote x)) (numC -1))))))) (list))) (cell 1 (boxV 0)) (cell 0 (numV 0)))) (app-call (quote fact) (closV (quote x) (ifZeroC (idC (quote x)) (numC 1) (multC (idC (quote x)) (appC (idC (quote fact)) (plusC (idC (quote x)) (numC -1))))) (list (bind (quote fact) 18))) (numV 1) (list) (list (cell 18 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 17) (bind (quote f) 2)))) (cell 17 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 2)))) (cell 16 (numV 1)) (cell 15 (numV 2)) (cell 14 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 13) (bind (quote f) 2)))) (cell 13 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 2)))) (cell 12 (numV 2)) (cell 11 (numV 3)) (cell 10 (numV 3)) (cell 9 (numV 3)) (cell 8 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 7) (bind (quote f) 6)))) (cell 7 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 6)))) (cell 6 (closV (quote fact_loop) (labelC (quote fact_loop) (lamC (quote dummy) (letC (quote in) (readC "x") (ifZeroC (idC (quote in)) (idC (quote in)) (seqC (writeC "fact(x)" (appC (idC (quote fact)) (idC (quote in)))) (seqC (setboxC (idC (quote inputs)) (plusC (unboxC (idC (quote inputs))) (numC 1))) (appC (idC (quote fact_loop)) (idC (quote dummy))))))))) (list (bind (quote fact) 5) (bind (quote inputs) 1)))) (cell 5 (namedV (quote fact) (closV (quote x) (ifZeroC (idC (quote x)) (numC 1) (multC (idC (quote x)) (appC (idC (quote fact)) (plusC (idC (quote x)) (numC -1))))) (list (bind (quote fact) 4))))) (cell 4 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 3) (bind (quote f) 2)))) (cell 3 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 2)))) (cell 2 (closV (quote fact) (labelC (quote fact) (lamC (quote x) (ifZeroC (idC (quote x)) (numC 1) (multC (idC (quote x)) (appC (idC (quote fact)) (plusC (idC (quote x)) (numC -1))))))) (list))) (cell 1 (boxV 0)) (cell 0 (numV 0)))) (app-call (quote fact) (closV (quote x) (ifZeroC (idC (quote x)) (numC 1) (multC (idC (quote x)) (appC (idC (quote fact)) (plusC (idC (quote x)) (numC -1))))) (list (bind (quote fact) 22))) (numV 0) (list) (list (cell 22 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 21) (bind (quote f) 2)))) (cell 21 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 2)))) (cell 20 (numV 0)) (cell 19 (numV 1)) (cell 18 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 17) (bind (quote f) 2)))) (cell 17 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 2)))) (cell 16 (numV 1)) (cell 15 (numV 2)) (cell 14 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 13) (bind (quote f) 2)))) (cell 13 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 2)))) (cell 12 (numV 2)) (cell 11 (numV 3)) (cell 10 (numV 3)) (cell 9 (numV 3)) (cell 8 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 7) (bind (quote f) 6)))) (cell 7 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 6)))) (cell 6 (closV (quote fact_loop) (labelC (quote fact_loop) (lamC (quote dummy) (letC (quote in) (readC "x") (ifZeroC (idC (quote in)) (idC (quote in)) (seqC (writeC "fact(x)" (appC (idC (quote fact)) (idC (quote in)))) (seqC (setboxC (idC (quote inputs)) (plusC (unboxC (idC (quote inputs))) (numC 1))) (appC (idC (quote fact_loop)) (idC (quote dummy))))))))) (list (bind (quote fact) 5) (bind (quote inputs) 1)))) (cell 5 (namedV (quote fact) (closV (quote x) (ifZeroC (idC (quote x)) (numC 1) (multC (idC (quote x)) (appC (idC (quote fact)) (plusC (idC (quote x)) (numC -1))))) (list (bind (quote fact) 4))))) (cell 4 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 3) (bind (quote f) 2)))) (cell 3 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 2)))) (cell 2 (closV (quote fact) (labelC (quote fact) (lamC (quote x) (ifZeroC (idC (quote x)) (numC 1) (multC (idC (quote x)) (appC (idC (quote fact)) (plusC (idC (quote x)) (numC -1))))))) (list))) (cell 1 (boxV 0)) (cell 0 (numV 0)))) (app-return (quote fact) (closV (quote x) (ifZeroC (idC (quote x)) (numC 1) (multC (idC (quote x)) (appC (idC (quote fact)) (plusC (idC (quote x)) (numC -1))))) (list (bind (quote fact) 22))) (numV 0) (list) (list (cell 22 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 21) (bind (quote f) 2)))) (cell 21 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 2)))) (cell 20 (numV 0)) (cell 19 (numV 1)) (cell 18 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 17) (bind (quote f) 2)))) (cell 17 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 2)))) (cell 16 (numV 1)) (cell 15 (numV 2)) (cell 14 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 13) (bind (quote f) 2)))) (cell 13 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 2)))) (cell 12 (numV 2)) (cell 11 (numV 3)) (cell 10 (numV 3)) (cell 9 (numV 3)) (cell 8 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 7) (bind (quote f) 6)))) (cell 7 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 6)))) (cell 6 (closV (quote fact_loop) (labelC (quote fact_loop) (lamC (quote dummy) (letC (quote in) (readC "x") (ifZeroC (idC (quote in)) (idC (quote in)) (seqC (writeC "fact(x)" (appC (idC (quote fact)) (idC (quote in)))) (seqC (setboxC (idC (quote inputs)) (plusC (unboxC (idC (quote inputs))) (numC 1))) (appC (idC (quote fact_loop)) (idC (quote dummy))))))))) (list (bind (quote fact) 5) (bind (quote inputs) 1)))) (cell 5 (namedV (quote fact) (closV (quote x) (ifZeroC (idC (quote x)) (numC 1) (multC (idC (quote x)) (appC (idC (quote fact)) (plusC (idC (quote x)) (numC -1))))) (list (bind (quote fact) 4))))) (cell 4 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 3) (bind (quote f) 2)))) (cell 3 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 2)))) (cell 2 (closV (quote fact) (labelC (quote fact) (lamC (quote x) (ifZeroC (idC (quote x)) (numC 1) (multC (idC (quote x)) (appC (idC (quote fact)) (plusC (idC (quote x)) (numC -1))))))) (list))) (cell 1 (boxV 0)) (cell 0 (numV 0)))) (app-return (quote fact) (closV (quote x) (ifZeroC (idC (quote x)) (numC 1) (multC (idC (quote x)) (appC (idC (quote fact)) (plusC (idC (quote x)) (numC -1))))) (list (bind (quote fact) 18))) (numV 1) (list) (list (cell 18 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 17) (bind (quote f) 2)))) (cell 17 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 2)))) (cell 16 (numV 1)) (cell 15 (numV 2)) (cell 14 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 13) (bind (quote f) 2)))) (cell 13 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 2)))) (cell 12 (numV 2)) (cell 11 (numV 3)) (cell 10 (numV 3)) (cell 9 (numV 3)) (cell 8 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 7) (bind (quote f) 6)))) (cell 7 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 6)))) (cell 6 (closV (quote fact_loop) (labelC (quote fact_loop) (lamC (quote dummy) (letC (quote in) (readC "x") (ifZeroC (idC (quote in)) (idC (quote in)) (seqC (writeC "fact(x)" (appC (idC (quote fact)) (idC (quote in)))) (seqC (setboxC (idC (quote inputs)) (plusC (unboxC (idC (quote inputs))) (numC 1))) (appC (idC (quote fact_loop)) (idC (quote dummy))))))))) (list (bind (quote fact) 5) (bind (quote inputs) 1)))) (cell 5 (namedV (quote fact) (closV (quote x) (ifZeroC (idC (quote x)) (numC 1) (multC (idC (quote x)) (appC (idC (quote fact)) (plusC (idC (quote x)) (numC -1))))) (list (bind (quote fact) 4))))) (cell 4 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 3) (bind (quote f) 2)))) (cell 3 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 2)))) (cell 2 (closV (quote fact) (labelC (quote fact) (lamC (quote x) (ifZeroC (idC (quote x)) (numC 1) (multC (idC (quote x)) (appC (idC (quote fact)) (plusC (idC (quote x)) (numC -1))))))) (list))) (cell 1 (boxV 0)) (cell 0 (numV 0)))) (app-return (quote fact) (closV (quote x) (ifZeroC (idC (quote x)) (numC 1) (multC (idC (quote x)) (appC (idC (quote fact)) (plusC (idC (quote x)) (numC -1))))) (list (bind (quote fact) 14))) (numV 2) (list) (list (cell 14 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 13) (bind (quote f) 2)))) (cell 13 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 2)))) (cell 12 (numV 2)) (cell 11 (numV 3)) (cell 10 (numV 3)) (cell 9 (numV 3)) (cell 8 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 7) (bind (quote f) 6)))) (cell 7 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 6)))) (cell 6 (closV (quote fact_loop) (labelC (quote fact_loop) (lamC (quote dummy) (letC (quote in) (readC "x") (ifZeroC (idC (quote in)) (idC (quote in)) (seqC (writeC "fact(x)" (appC (idC (quote fact)) (idC (quote in)))) (seqC (setboxC (idC (quote inputs)) (plusC (unboxC (idC (quote inputs))) (numC 1))) (appC (idC (quote fact_loop)) (idC (quote dummy))))))))) (list (bind (quote fact) 5) (bind (quote inputs) 1)))) (cell 5 (namedV (quote fact) (closV (quote x) (ifZeroC (idC (quote x)) (numC 1) (multC (idC (quote x)) (appC (idC (quote fact)) (plusC (idC (quote x)) (numC -1))))) (list (bind (quote fact) 4))))) (cell 4 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 3) (bind (quote f) 2)))) (cell 3 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 2)))) (cell 2 (closV (quote fact) (labelC (quote fact) (lamC (quote x) (ifZeroC (idC (quote x)) (numC 1) (multC (idC (quote x)) (appC (idC (quote fact)) (plusC (idC (quote x)) (numC -1))))))) (list))) (cell 1 (boxV 0)) (cell 0 (numV 0)))) (app-return (quote fact) (closV (quote x) (ifZeroC (idC (quote x)) (numC 1) (multC (idC (quote x)) (appC (idC (quote fact)) (plusC (idC (quote x)) (numC -1))))) (list (bind (quote fact) 4))) (numV 3) (list) (list (cell 10 (numV 3)) (cell 9 (numV 3)) (cell 8 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 7) (bind (quote f) 6)))) (cell 7 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 6)))) (cell 6 (closV (quote fact_loop) (labelC (quote fact_loop) (lamC (quote dummy) (letC (quote in) (readC "x") (ifZeroC (idC (quote in)) (idC (quote in)) (seqC (writeC "fact(x)" (appC (idC (quote fact)) (idC (quote in)))) (seqC (setboxC (idC (quote inputs)) (plusC (unboxC (idC (quote inputs))) (numC 1))) (appC (idC (quote fact_loop)) (idC (quote dummy))))))))) (list (bind (quote fact) 5) (bind (quote inputs) 1)))) (cell 5 (namedV (quote fact) (closV (quote x) (ifZeroC (idC (quote x)) (numC 1) (multC (idC (quote x)) (appC (idC (quote fact)) (plusC (idC (quote x)) (numC -1))))) (list (bind (quote fact) 4))))) (cell 4 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 3) (bind (quote f) 2)))) (cell 3 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 2)))) (cell 2 (closV (quote fact) (labelC (quote fact) (lamC (quote x) (ifZeroC (idC (quote x)) (numC 1) (multC (idC (quote x)) (appC (idC (quote fact)) (plusC (idC (quote x)) (numC -1))))))) (list))) (cell 1 (boxV 0)) (cell 0 (numV 0)))) (app-call (quote fact_loop) (closV (quote dummy) (letC (quote in) (readC "x") (ifZeroC (idC (quote in)) (idC (quote in)) (seqC (writeC "fact(x)" (appC (idC (quote fact)) (idC (quote in)))) (seqC (setboxC (idC (quote inputs)) (plusC (unboxC (idC (quote inputs))) (numC 1))) (appC (idC (quote fact_loop)) (idC (quote dummy))))))) (list (bind (quote fact_loop) 27) (bind (quote fact) 5) (bind (quote inputs) 1))) (numV 3) (list) (list (cell 27 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 26) (bind (quote f) 6)))) (cell 26 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 6)))) (cell 25 (numV 3)) (cell 0 (numV 1)) (cell 23 (numV 0)) (cell 22 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 21) (bind (quote f) 2)))) (cell 21 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 2)))) (cell 20 (numV 0)) (cell 19 (numV 1)) (cell 18 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 17) (bind (quote f) 2)))) (cell 17 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 2)))) (cell 16 (numV 1)) (cell 15 (numV 2)) (cell 14 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 13) (bind (quote f) 2)))) (cell 13 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 2)))) (cell 12 (numV 2)) (cell 11 (numV 3)) (cell 10 (numV 3)) (cell 9 (numV 3)) (cell 8 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 7) (bind (quote f) 6)))) (cell 7 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 6)))) (cell 6 (closV (quote fact_loop) (labelC (quote fact_loop) (lamC (quote dummy) (letC (quote in) (readC "x") (ifZeroC (idC (quote in)) (idC (quote in)) (seqC (writeC "fact(x)" (appC (idC (quote fact)) (idC (quote in)))) (seqC (setboxC (idC (quote inputs)) (plusC (unboxC (idC (quote inputs))) (numC 1))) (appC (idC (quote fact_loop)) (idC (quote dummy))))))))) (list (bind (quote fact) 5) (bind (quote inputs) 1)))) (cell 5 (namedV (quote fact) (closV (quote x) (ifZeroC (idC (quote x)) (numC 1) (multC (idC (quote x)) (appC (idC (quote fact)) (plusC (idC (quote x)) (numC -1))))) (list (bind (quote fact) 4))))) (cell 4 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 3) (bind (quote f) 2)))) (cell 3 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 2)))) (cell 2 (closV (quote fact) (labelC (quote fact) (lamC (quote x) (ifZeroC (idC (quote x)) (numC 1) (multC (idC (quote x)) (appC (idC (quote fact)) (plusC (idC (quote x)) (numC -1))))))) (list))) (cell 1 (boxV 0)) (cell 0 (numV 0)))) (app-return (quote fact_loop) (closV (quote dummy) (letC (quote in) (readC "x") (ifZeroC (idC (quote in)) (idC (quote in)) (seqC (writeC "fact(x)" (appC (idC (quote fact)) (idC (quote in)))) (seqC (setboxC (idC (quote inputs)) (plusC (unboxC (idC (quote inputs))) (numC 1))) (appC (idC (quote fact_loop)) (idC (quote dummy))))))) (list (bind (quote fact_loop) 27) (bind (quote fact) 5) (bind (quote inputs) 1))) (numV 3) (list) (list (cell 27 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 26) (bind (quote f) 6)))) (cell 26 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 6)))) (cell 25 (numV 3)) (cell 0 (numV 1)) (cell 23 (numV 0)) (cell 22 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 21) (bind (quote f) 2)))) (cell 21 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 2)))) (cell 20 (numV 0)) (cell 19 (numV 1)) (cell 18 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 17) (bind (quote f) 2)))) (cell 17 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 2)))) (cell 16 (numV 1)) (cell 15 (numV 2)) (cell 14 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 13) (bind (quote f) 2)))) (cell 13 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 2)))) (cell 12 (numV 2)) (cell 11 (numV 3)) (cell 10 (numV 3)) (cell 9 (numV 3)) (cell 8 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 7) (bind (quote f) 6)))) (cell 7 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 6)))) (cell 6 (closV (quote fact_loop) (labelC (quote fact_loop) (lamC (quote dummy) (letC (quote in) (readC "x") (ifZeroC (idC (quote in)) (idC (quote in)) (seqC (writeC "fact(x)" (appC (idC (quote fact)) (idC (quote in)))) (seqC (setboxC (idC (quote inputs)) (plusC (unboxC (idC (quote inputs))) (numC 1))) (appC (idC (quote fact_loop)) (idC (quote dummy))))))))) (list (bind (quote fact) 5) (bind (quote inputs) 1)))) (cell 5 (namedV (quote fact) (closV (quote x) (ifZeroC (idC (quote x)) (numC 1) (multC (idC (quote x)) (appC (idC (quote fact)) (plusC (idC (quote x)) (numC -1))))) (list (bind (quote fact) 4))))) (cell 4 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 3) (bind (quote f) 2)))) (cell 3 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 2)))) (cell 2 (closV (quote fact) (labelC (quote fact) (lamC (quote x) (ifZeroC (idC (quote x)) (numC 1) (multC (idC (quote x)) (appC (idC (quote fact)) (plusC (idC (quote x)) (numC -1))))))) (list))) (cell 1 (boxV 0)) (cell 0 (numV 0)))) (app-return (quote fact_loop) (closV (quote dummy) (letC (quote in) (readC "x") (ifZeroC (idC (quote in)) (idC (quote in)) (seqC (writeC "fact(x)" (appC (idC (quote fact)) (idC (quote in)))) (seqC (setboxC (idC (quote inputs)) (plusC (unboxC (idC (quote inputs))) (numC 1))) (appC (idC (quote fact_loop)) (idC (quote dummy))))))) (list (bind (quote fact_loop) 8) (bind (quote fact) 5) (bind (quote inputs) 1))) (numV 3) (list) (list (cell 8 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 7) (bind (quote f) 6)))) (cell 7 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 6)))) (cell 6 (closV (quote fact_loop) (labelC (quote fact_loop) (lamC (quote dummy) (letC (quote in) (readC "x") (ifZeroC (idC (quote in)) (idC (quote in)) (seqC (writeC "fact(x)" (appC (idC (quote fact)) (idC (quote in)))) (seqC (setboxC (idC (quote inputs)) (plusC (unboxC (idC (quote inputs))) (numC 1))) (appC (idC (quote fact_loop)) (idC (quote dummy))))))))) (list (bind (quote fact) 5) (bind (quote inputs) 1)))) (cell 5 (namedV (quote fact) (closV (quote x) (ifZeroC (idC (quote x)) (numC 1) (multC (idC (quote x)) (appC (idC (quote fact)) (plusC (idC (quote x)) (numC -1))))) (list (bind (quote fact) 4))))) (cell 4 (closV (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))) (list (bind (quote x) 3) (bind (quote f) 2)))) (cell 3 (closV (quote x) (appC (idC (quote f)) (lamC (quote y) (appC (appC (idC (quote x)) (idC (quote x))) (idC (quote y))))) (list (bind (quote f) 2)))) (cell 2 (closV (quote fact) (labelC (quote fact) (lamC (quote x) (ifZeroC (idC (quote x)) (numC 1) (multC (idC (quote x)) (appC (idC (quote fact)) (plusC (idC (quote x)) (numC -1))))))) (list))) (cell 1 (boxV 0)) (cell 0 (numV 0))))) 2)