(mirajTrace (list (letC (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1)))))) (letC (funC (quote fact_loop) (quote x) (letC (bindC (quote in) (readC)) (ifZeroOrLessC (varC (quote in)) (varC (quote in)) (seqC (writeC (appC (quote fact) (varC (quote in)))) (appC (quote fact_loop) (varC (quote in))))))) (appC (quote fact_loop) (numC 42))))) (list (call (quote fact_loop) (numV 42) (list (funC (quote fact_loop) (quote x) (letC (bindC (quote in) (readC)) (ifZeroOrLessC (varC (quote in)) (varC (quote in)) (seqC (writeC (appC (quote fact) (varC (quote in)))) (appC (quote fact_loop) (varC (quote in))))))) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1))))))) (list)) (call (quote fact) (numV 3) (list (bindC (quote in) 1) (bindC (quote x) 0) (funC (quote fact_loop) (quote x) (letC (bindC (quote in) (readC)) (ifZeroOrLessC (varC (quote in)) (varC (quote in)) (seqC (writeC (appC (quote fact) (varC (quote in)))) (appC (quote fact_loop) (varC (quote in))))))) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1))))))) (list (cell 1 (numV 3)) (cell 0 (numV 42)))) (call (quote fact) (numV 2) (list (bindC (quote x) 2) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1))))))) (list (cell 2 (numV 3)) (cell 1 (numV 3)) (cell 0 (numV 42)))) (call (quote fact) (numV 1) (list (bindC (quote x) 3) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1))))))) (list (cell 3 (numV 2)) (cell 2 (numV 3)) (cell 1 (numV 3)) (cell 0 (numV 42)))) (call (quote fact) (numV 0) (list (bindC (quote x) 4) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1))))))) (list (cell 4 (numV 1)) (cell 3 (numV 2)) (cell 2 (numV 3)) (cell 1 (numV 3)) (cell 0 (numV 42)))) (return (quote fact) (numV 1) (list (bindC (quote x) 4) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1))))))) (list (cell 5 (numV 0)) (cell 4 (numV 1)) (cell 3 (numV 2)) (cell 2 (numV 3)) (cell 1 (numV 3)) (cell 0 (numV 42)))) (return (quote fact) (numV 1) (list (bindC (quote x) 3) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1))))))) (list (cell 5 (numV 0)) (cell 4 (numV 1)) (cell 3 (numV 2)) (cell 2 (numV 3)) (cell 1 (numV 3)) (cell 0 (numV 42)))) (return (quote fact) (numV 2) (list (bindC (quote x) 2) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1))))))) (list (cell 5 (numV 0)) (cell 4 (numV 1)) (cell 3 (numV 2)) (cell 2 (numV 3)) (cell 1 (numV 3)) (cell 0 (numV 42)))) (return (quote fact) (numV 6) (list (bindC (quote in) 1) (bindC (quote x) 0) (funC (quote fact_loop) (quote x) (letC (bindC (quote in) (readC)) (ifZeroOrLessC (varC (quote in)) (varC (quote in)) (seqC (writeC (appC (quote fact) (varC (quote in)))) (appC (quote fact_loop) (varC (quote in))))))) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1))))))) (list (cell 5 (numV 0)) (cell 4 (numV 1)) (cell 3 (numV 2)) (cell 2 (numV 3)) (cell 1 (numV 3)) (cell 0 (numV 42)))) (call (quote fact_loop) (numV 3) (list (bindC (quote in) 1) (bindC (quote x) 0) (funC (quote fact_loop) (quote x) (letC (bindC (quote in) (readC)) (ifZeroOrLessC (varC (quote in)) (varC (quote in)) (seqC (writeC (appC (quote fact) (varC (quote in)))) (appC (quote fact_loop) (varC (quote in))))))) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1))))))) (list (cell 5 (numV 0)) (cell 4 (numV 1)) (cell 3 (numV 2)) (cell 2 (numV 3)) (cell 1 (numV 3)) (cell 0 (numV 42)))) (call (quote fact) (numV 5) (list (bindC (quote in) 7) (bindC (quote x) 6) (funC (quote fact_loop) (quote x) (letC (bindC (quote in) (readC)) (ifZeroOrLessC (varC (quote in)) (varC (quote in)) (seqC (writeC (appC (quote fact) (varC (quote in)))) (appC (quote fact_loop) (varC (quote in))))))) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1))))))) (list (cell 7 (numV 5)) (cell 6 (numV 3)) (cell 5 (numV 0)) (cell 4 (numV 1)) (cell 3 (numV 2)) (cell 2 (numV 3)) (cell 1 (numV 3)) (cell 0 (numV 42)))) (call (quote fact) (numV 4) (list (bindC (quote x) 8) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1))))))) (list (cell 8 (numV 5)) (cell 7 (numV 5)) (cell 6 (numV 3)) (cell 5 (numV 0)) (cell 4 (numV 1)) (cell 3 (numV 2)) (cell 2 (numV 3)) (cell 1 (numV 3)) (cell 0 (numV 42)))) (call (quote fact) (numV 3) (list (bindC (quote x) 9) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1))))))) (list (cell 9 (numV 4)) (cell 8 (numV 5)) (cell 7 (numV 5)) (cell 6 (numV 3)) (cell 5 (numV 0)) (cell 4 (numV 1)) (cell 3 (numV 2)) (cell 2 (numV 3)) (cell 1 (numV 3)) (cell 0 (numV 42)))) (call (quote fact) (numV 2) (list (bindC (quote x) 10) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1))))))) (list (cell 10 (numV 3)) (cell 9 (numV 4)) (cell 8 (numV 5)) (cell 7 (numV 5)) (cell 6 (numV 3)) (cell 5 (numV 0)) (cell 4 (numV 1)) (cell 3 (numV 2)) (cell 2 (numV 3)) (cell 1 (numV 3)) (cell 0 (numV 42)))) (call (quote fact) (numV 1) (list (bindC (quote x) 11) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1))))))) (list (cell 11 (numV 2)) (cell 10 (numV 3)) (cell 9 (numV 4)) (cell 8 (numV 5)) (cell 7 (numV 5)) (cell 6 (numV 3)) (cell 5 (numV 0)) (cell 4 (numV 1)) (cell 3 (numV 2)) (cell 2 (numV 3)) (cell 1 (numV 3)) (cell 0 (numV 42)))) (call (quote fact) (numV 0) (list (bindC (quote x) 12) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1))))))) (list (cell 12 (numV 1)) (cell 11 (numV 2)) (cell 10 (numV 3)) (cell 9 (numV 4)) (cell 8 (numV 5)) (cell 7 (numV 5)) (cell 6 (numV 3)) (cell 5 (numV 0)) (cell 4 (numV 1)) (cell 3 (numV 2)) (cell 2 (numV 3)) (cell 1 (numV 3)) (cell 0 (numV 42)))) (return (quote fact) (numV 1) (list (bindC (quote x) 12) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1))))))) (list (cell 13 (numV 0)) (cell 12 (numV 1)) (cell 11 (numV 2)) (cell 10 (numV 3)) (cell 9 (numV 4)) (cell 8 (numV 5)) (cell 7 (numV 5)) (cell 6 (numV 3)) (cell 5 (numV 0)) (cell 4 (numV 1)) (cell 3 (numV 2)) (cell 2 (numV 3)) (cell 1 (numV 3)) (cell 0 (numV 42)))) (return (quote fact) (numV 1) (list (bindC (quote x) 11) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1))))))) (list (cell 13 (numV 0)) (cell 12 (numV 1)) (cell 11 (numV 2)) (cell 10 (numV 3)) (cell 9 (numV 4)) (cell 8 (numV 5)) (cell 7 (numV 5)) (cell 6 (numV 3)) (cell 5 (numV 0)) (cell 4 (numV 1)) (cell 3 (numV 2)) (cell 2 (numV 3)) (cell 1 (numV 3)) (cell 0 (numV 42)))) (return (quote fact) (numV 2) (list (bindC (quote x) 10) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1))))))) (list (cell 13 (numV 0)) (cell 12 (numV 1)) (cell 11 (numV 2)) (cell 10 (numV 3)) (cell 9 (numV 4)) (cell 8 (numV 5)) (cell 7 (numV 5)) (cell 6 (numV 3)) (cell 5 (numV 0)) (cell 4 (numV 1)) (cell 3 (numV 2)) (cell 2 (numV 3)) (cell 1 (numV 3)) (cell 0 (numV 42)))) (return (quote fact) (numV 6) (list (bindC (quote x) 9) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1))))))) (list (cell 13 (numV 0)) (cell 12 (numV 1)) (cell 11 (numV 2)) (cell 10 (numV 3)) (cell 9 (numV 4)) (cell 8 (numV 5)) (cell 7 (numV 5)) (cell 6 (numV 3)) (cell 5 (numV 0)) (cell 4 (numV 1)) (cell 3 (numV 2)) (cell 2 (numV 3)) (cell 1 (numV 3)) (cell 0 (numV 42)))) (return (quote fact) (numV 24) (list (bindC (quote x) 8) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1))))))) (list (cell 13 (numV 0)) (cell 12 (numV 1)) (cell 11 (numV 2)) (cell 10 (numV 3)) (cell 9 (numV 4)) (cell 8 (numV 5)) (cell 7 (numV 5)) (cell 6 (numV 3)) (cell 5 (numV 0)) (cell 4 (numV 1)) (cell 3 (numV 2)) (cell 2 (numV 3)) (cell 1 (numV 3)) (cell 0 (numV 42)))) (return (quote fact) (numV 120) (list (bindC (quote in) 7) (bindC (quote x) 6) (funC (quote fact_loop) (quote x) (letC (bindC (quote in) (readC)) (ifZeroOrLessC (varC (quote in)) (varC (quote in)) (seqC (writeC (appC (quote fact) (varC (quote in)))) (appC (quote fact_loop) (varC (quote in))))))) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1))))))) (list (cell 13 (numV 0)) (cell 12 (numV 1)) (cell 11 (numV 2)) (cell 10 (numV 3)) (cell 9 (numV 4)) (cell 8 (numV 5)) (cell 7 (numV 5)) (cell 6 (numV 3)) (cell 5 (numV 0)) (cell 4 (numV 1)) (cell 3 (numV 2)) (cell 2 (numV 3)) (cell 1 (numV 3)) (cell 0 (numV 42)))) (call (quote fact_loop) (numV 5) (list (bindC (quote in) 7) (bindC (quote x) 6) (funC (quote fact_loop) (quote x) (letC (bindC (quote in) (readC)) (ifZeroOrLessC (varC (quote in)) (varC (quote in)) (seqC (writeC (appC (quote fact) (varC (quote in)))) (appC (quote fact_loop) (varC (quote in))))))) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1))))))) (list (cell 13 (numV 0)) (cell 12 (numV 1)) (cell 11 (numV 2)) (cell 10 (numV 3)) (cell 9 (numV 4)) (cell 8 (numV 5)) (cell 7 (numV 5)) (cell 6 (numV 3)) (cell 5 (numV 0)) (cell 4 (numV 1)) (cell 3 (numV 2)) (cell 2 (numV 3)) (cell 1 (numV 3)) (cell 0 (numV 42)))) (return (quote fact_loop) (numV 0) (list (bindC (quote in) 7) (bindC (quote x) 6) (funC (quote fact_loop) (quote x) (letC (bindC (quote in) (readC)) (ifZeroOrLessC (varC (quote in)) (varC (quote in)) (seqC (writeC (appC (quote fact) (varC (quote in)))) (appC (quote fact_loop) (varC (quote in))))))) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1))))))) (list (cell 15 (numV 0)) (cell 14 (numV 5)) (cell 13 (numV 0)) (cell 12 (numV 1)) (cell 11 (numV 2)) (cell 10 (numV 3)) (cell 9 (numV 4)) (cell 8 (numV 5)) (cell 7 (numV 5)) (cell 6 (numV 3)) (cell 5 (numV 0)) (cell 4 (numV 1)) (cell 3 (numV 2)) (cell 2 (numV 3)) (cell 1 (numV 3)) (cell 0 (numV 42)))) (return (quote fact_loop) (numV 0) (list (bindC (quote in) 1) (bindC (quote x) 0) (funC (quote fact_loop) (quote x) (letC (bindC (quote in) (readC)) (ifZeroOrLessC (varC (quote in)) (varC (quote in)) (seqC (writeC (appC (quote fact) (varC (quote in)))) (appC (quote fact_loop) (varC (quote in))))))) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1))))))) (list (cell 15 (numV 0)) (cell 14 (numV 5)) (cell 13 (numV 0)) (cell 12 (numV 1)) (cell 11 (numV 2)) (cell 10 (numV 3)) (cell 9 (numV 4)) (cell 8 (numV 5)) (cell 7 (numV 5)) (cell 6 (numV 3)) (cell 5 (numV 0)) (cell 4 (numV 1)) (cell 3 (numV 2)) (cell 2 (numV 3)) (cell 1 (numV 3)) (cell 0 (numV 42)))) (return (quote fact_loop) (numV 0) (list (funC (quote fact_loop) (quote x) (letC (bindC (quote in) (readC)) (ifZeroOrLessC (varC (quote in)) (varC (quote in)) (seqC (writeC (appC (quote fact) (varC (quote in)))) (appC (quote fact_loop) (varC (quote in))))))) (funC (quote fact) (quote x) (ifZeroOrLessC (varC (quote x)) (numC 1) (multC (varC (quote x)) (appC (quote fact) (plusC (varC (quote x)) (numC -1))))))) (list (cell 15 (numV 0)) (cell 14 (numV 5)) (cell 13 (numV 0)) (cell 12 (numV 1)) (cell 11 (numV 2)) (cell 10 (numV 3)) (cell 9 (numV 4)) (cell 8 (numV 5)) (cell 7 (numV 5)) (cell 6 (numV 3)) (cell 5 (numV 0)) (cell 4 (numV 1)) (cell 3 (numV 2)) (cell 2 (numV 3)) (cell 1 (numV 3)) (cell 0 (numV 42))))))