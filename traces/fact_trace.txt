(mirajTrace
 (numV 3)
 (list
  (joinpoint
   (app-call
    (taggedV
     (symbolV 'fact)
     (closV
      'x
      (ifC
       (equalC (idC 'x) (numC 0))
       (numC 1)
       (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))
      (list (bind 'fact 2))))
    (numV 3))
   (list)
   (store
    (list
     (cell
      2
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 1) (bind 'f 0))))
     (cell
      1
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell
      0
      (closV
       'fact
       (tagC
        (symbolC 'fact)
        (lamC
         'x
         (ifC
          (equalC (idC 'x) (numC 0))
          (numC 1)
          (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))))
       (list))))
    (list)))
  (joinpoint
   (app-call
    (closV
     'y
     (appC (appC (idC 'x) (idC 'x)) (idC 'y))
     (list (bind 'x 1) (bind 'f 0)))
    (numV 2))
   (list)
   (store
    (list
     (cell 3 (numV 3))
     (cell
      2
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 1) (bind 'f 0))))
     (cell
      1
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell
      0
      (closV
       'fact
       (tagC
        (symbolC 'fact)
        (lamC
         'x
         (ifC
          (equalC (idC 'x) (numC 0))
          (numC 1)
          (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))))
       (list))))
    (list)))
  (joinpoint
   (app-call
    (closV
     'x
     (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
     (list (bind 'f 0)))
    (closV
     'x
     (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
     (list (bind 'f 0))))
   (list)
   (store
    (list
     (cell 4 (numV 2))
     (cell 3 (numV 3))
     (cell
      2
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 1) (bind 'f 0))))
     (cell
      1
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell
      0
      (closV
       'fact
       (tagC
        (symbolC 'fact)
        (lamC
         'x
         (ifC
          (equalC (idC 'x) (numC 0))
          (numC 1)
          (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))))
       (list))))
    (list)))
  (joinpoint
   (app-call
    (closV
     'fact
     (tagC
      (symbolC 'fact)
      (lamC
       'x
       (ifC
        (equalC (idC 'x) (numC 0))
        (numC 1)
        (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))))
     (list))
    (closV
     'y
     (appC (appC (idC 'x) (idC 'x)) (idC 'y))
     (list (bind 'x 5) (bind 'f 0))))
   (list)
   (store
    (list
     (cell
      5
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 4 (numV 2))
     (cell 3 (numV 3))
     (cell
      2
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 1) (bind 'f 0))))
     (cell
      1
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell
      0
      (closV
       'fact
       (tagC
        (symbolC 'fact)
        (lamC
         'x
         (ifC
          (equalC (idC 'x) (numC 0))
          (numC 1)
          (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))))
       (list))))
    (list)))
  (joinpoint
   (app-result
    (closV
     'fact
     (tagC
      (symbolC 'fact)
      (lamC
       'x
       (ifC
        (equalC (idC 'x) (numC 0))
        (numC 1)
        (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))))
     (list))
    (taggedV
     (symbolV 'fact)
     (closV
      'x
      (ifC
       (equalC (idC 'x) (numC 0))
       (numC 1)
       (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))
      (list (bind 'fact 6)))))
   (list)
   (store
    (list
     (cell
      6
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 5) (bind 'f 0))))
     (cell
      5
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 4 (numV 2))
     (cell 3 (numV 3))
     (cell
      2
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 1) (bind 'f 0))))
     (cell
      1
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell
      0
      (closV
       'fact
       (tagC
        (symbolC 'fact)
        (lamC
         'x
         (ifC
          (equalC (idC 'x) (numC 0))
          (numC 1)
          (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))))
       (list))))
    (list)))
  (joinpoint
   (app-result
    (closV
     'x
     (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
     (list (bind 'f 0)))
    (taggedV
     (symbolV 'fact)
     (closV
      'x
      (ifC
       (equalC (idC 'x) (numC 0))
       (numC 1)
       (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))
      (list (bind 'fact 6)))))
   (list)
   (store
    (list
     (cell
      6
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 5) (bind 'f 0))))
     (cell
      5
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 4 (numV 2))
     (cell 3 (numV 3))
     (cell
      2
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 1) (bind 'f 0))))
     (cell
      1
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell
      0
      (closV
       'fact
       (tagC
        (symbolC 'fact)
        (lamC
         'x
         (ifC
          (equalC (idC 'x) (numC 0))
          (numC 1)
          (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))))
       (list))))
    (list)))
  (joinpoint
   (app-call
    (taggedV
     (symbolV 'fact)
     (closV
      'x
      (ifC
       (equalC (idC 'x) (numC 0))
       (numC 1)
       (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))
      (list (bind 'fact 6))))
    (numV 2))
   (list)
   (store
    (list
     (cell
      6
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 5) (bind 'f 0))))
     (cell
      5
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 4 (numV 2))
     (cell 3 (numV 3))
     (cell
      2
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 1) (bind 'f 0))))
     (cell
      1
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell
      0
      (closV
       'fact
       (tagC
        (symbolC 'fact)
        (lamC
         'x
         (ifC
          (equalC (idC 'x) (numC 0))
          (numC 1)
          (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))))
       (list))))
    (list)))
  (joinpoint
   (app-call
    (closV
     'y
     (appC (appC (idC 'x) (idC 'x)) (idC 'y))
     (list (bind 'x 5) (bind 'f 0)))
    (numV 1))
   (list)
   (store
    (list
     (cell 7 (numV 2))
     (cell
      6
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 5) (bind 'f 0))))
     (cell
      5
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 4 (numV 2))
     (cell 3 (numV 3))
     (cell
      2
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 1) (bind 'f 0))))
     (cell
      1
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell
      0
      (closV
       'fact
       (tagC
        (symbolC 'fact)
        (lamC
         'x
         (ifC
          (equalC (idC 'x) (numC 0))
          (numC 1)
          (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))))
       (list))))
    (list)))
  (joinpoint
   (app-call
    (closV
     'x
     (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
     (list (bind 'f 0)))
    (closV
     'x
     (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
     (list (bind 'f 0))))
   (list)
   (store
    (list
     (cell 8 (numV 1))
     (cell 7 (numV 2))
     (cell
      6
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 5) (bind 'f 0))))
     (cell
      5
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 4 (numV 2))
     (cell 3 (numV 3))
     (cell
      2
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 1) (bind 'f 0))))
     (cell
      1
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell
      0
      (closV
       'fact
       (tagC
        (symbolC 'fact)
        (lamC
         'x
         (ifC
          (equalC (idC 'x) (numC 0))
          (numC 1)
          (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))))
       (list))))
    (list)))
  (joinpoint
   (app-call
    (closV
     'fact
     (tagC
      (symbolC 'fact)
      (lamC
       'x
       (ifC
        (equalC (idC 'x) (numC 0))
        (numC 1)
        (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))))
     (list))
    (closV
     'y
     (appC (appC (idC 'x) (idC 'x)) (idC 'y))
     (list (bind 'x 9) (bind 'f 0))))
   (list)
   (store
    (list
     (cell
      9
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 8 (numV 1))
     (cell 7 (numV 2))
     (cell
      6
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 5) (bind 'f 0))))
     (cell
      5
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 4 (numV 2))
     (cell 3 (numV 3))
     (cell
      2
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 1) (bind 'f 0))))
     (cell
      1
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell
      0
      (closV
       'fact
       (tagC
        (symbolC 'fact)
        (lamC
         'x
         (ifC
          (equalC (idC 'x) (numC 0))
          (numC 1)
          (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))))
       (list))))
    (list)))
  (joinpoint
   (app-result
    (closV
     'fact
     (tagC
      (symbolC 'fact)
      (lamC
       'x
       (ifC
        (equalC (idC 'x) (numC 0))
        (numC 1)
        (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))))
     (list))
    (taggedV
     (symbolV 'fact)
     (closV
      'x
      (ifC
       (equalC (idC 'x) (numC 0))
       (numC 1)
       (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))
      (list (bind 'fact 10)))))
   (list)
   (store
    (list
     (cell
      10
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 9) (bind 'f 0))))
     (cell
      9
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 8 (numV 1))
     (cell 7 (numV 2))
     (cell
      6
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 5) (bind 'f 0))))
     (cell
      5
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 4 (numV 2))
     (cell 3 (numV 3))
     (cell
      2
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 1) (bind 'f 0))))
     (cell
      1
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell
      0
      (closV
       'fact
       (tagC
        (symbolC 'fact)
        (lamC
         'x
         (ifC
          (equalC (idC 'x) (numC 0))
          (numC 1)
          (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))))
       (list))))
    (list)))
  (joinpoint
   (app-result
    (closV
     'x
     (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
     (list (bind 'f 0)))
    (taggedV
     (symbolV 'fact)
     (closV
      'x
      (ifC
       (equalC (idC 'x) (numC 0))
       (numC 1)
       (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))
      (list (bind 'fact 10)))))
   (list)
   (store
    (list
     (cell
      10
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 9) (bind 'f 0))))
     (cell
      9
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 8 (numV 1))
     (cell 7 (numV 2))
     (cell
      6
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 5) (bind 'f 0))))
     (cell
      5
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 4 (numV 2))
     (cell 3 (numV 3))
     (cell
      2
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 1) (bind 'f 0))))
     (cell
      1
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell
      0
      (closV
       'fact
       (tagC
        (symbolC 'fact)
        (lamC
         'x
         (ifC
          (equalC (idC 'x) (numC 0))
          (numC 1)
          (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))))
       (list))))
    (list)))
  (joinpoint
   (app-call
    (taggedV
     (symbolV 'fact)
     (closV
      'x
      (ifC
       (equalC (idC 'x) (numC 0))
       (numC 1)
       (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))
      (list (bind 'fact 10))))
    (numV 1))
   (list)
   (store
    (list
     (cell
      10
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 9) (bind 'f 0))))
     (cell
      9
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 8 (numV 1))
     (cell 7 (numV 2))
     (cell
      6
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 5) (bind 'f 0))))
     (cell
      5
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 4 (numV 2))
     (cell 3 (numV 3))
     (cell
      2
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 1) (bind 'f 0))))
     (cell
      1
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell
      0
      (closV
       'fact
       (tagC
        (symbolC 'fact)
        (lamC
         'x
         (ifC
          (equalC (idC 'x) (numC 0))
          (numC 1)
          (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))))
       (list))))
    (list)))
  (joinpoint
   (app-call
    (closV
     'y
     (appC (appC (idC 'x) (idC 'x)) (idC 'y))
     (list (bind 'x 9) (bind 'f 0)))
    (numV 0))
   (list)
   (store
    (list
     (cell 11 (numV 1))
     (cell
      10
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 9) (bind 'f 0))))
     (cell
      9
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 8 (numV 1))
     (cell 7 (numV 2))
     (cell
      6
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 5) (bind 'f 0))))
     (cell
      5
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 4 (numV 2))
     (cell 3 (numV 3))
     (cell
      2
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 1) (bind 'f 0))))
     (cell
      1
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell
      0
      (closV
       'fact
       (tagC
        (symbolC 'fact)
        (lamC
         'x
         (ifC
          (equalC (idC 'x) (numC 0))
          (numC 1)
          (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))))
       (list))))
    (list)))
  (joinpoint
   (app-call
    (closV
     'x
     (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
     (list (bind 'f 0)))
    (closV
     'x
     (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
     (list (bind 'f 0))))
   (list)
   (store
    (list
     (cell 12 (numV 0))
     (cell 11 (numV 1))
     (cell
      10
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 9) (bind 'f 0))))
     (cell
      9
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 8 (numV 1))
     (cell 7 (numV 2))
     (cell
      6
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 5) (bind 'f 0))))
     (cell
      5
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 4 (numV 2))
     (cell 3 (numV 3))
     (cell
      2
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 1) (bind 'f 0))))
     (cell
      1
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell
      0
      (closV
       'fact
       (tagC
        (symbolC 'fact)
        (lamC
         'x
         (ifC
          (equalC (idC 'x) (numC 0))
          (numC 1)
          (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))))
       (list))))
    (list)))
  (joinpoint
   (app-call
    (closV
     'fact
     (tagC
      (symbolC 'fact)
      (lamC
       'x
       (ifC
        (equalC (idC 'x) (numC 0))
        (numC 1)
        (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))))
     (list))
    (closV
     'y
     (appC (appC (idC 'x) (idC 'x)) (idC 'y))
     (list (bind 'x 13) (bind 'f 0))))
   (list)
   (store
    (list
     (cell
      13
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 12 (numV 0))
     (cell 11 (numV 1))
     (cell
      10
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 9) (bind 'f 0))))
     (cell
      9
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 8 (numV 1))
     (cell 7 (numV 2))
     (cell
      6
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 5) (bind 'f 0))))
     (cell
      5
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 4 (numV 2))
     (cell 3 (numV 3))
     (cell
      2
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 1) (bind 'f 0))))
     (cell
      1
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell
      0
      (closV
       'fact
       (tagC
        (symbolC 'fact)
        (lamC
         'x
         (ifC
          (equalC (idC 'x) (numC 0))
          (numC 1)
          (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))))
       (list))))
    (list)))
  (joinpoint
   (app-result
    (closV
     'fact
     (tagC
      (symbolC 'fact)
      (lamC
       'x
       (ifC
        (equalC (idC 'x) (numC 0))
        (numC 1)
        (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))))
     (list))
    (taggedV
     (symbolV 'fact)
     (closV
      'x
      (ifC
       (equalC (idC 'x) (numC 0))
       (numC 1)
       (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))
      (list (bind 'fact 14)))))
   (list)
   (store
    (list
     (cell
      14
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 13) (bind 'f 0))))
     (cell
      13
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 12 (numV 0))
     (cell 11 (numV 1))
     (cell
      10
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 9) (bind 'f 0))))
     (cell
      9
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 8 (numV 1))
     (cell 7 (numV 2))
     (cell
      6
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 5) (bind 'f 0))))
     (cell
      5
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 4 (numV 2))
     (cell 3 (numV 3))
     (cell
      2
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 1) (bind 'f 0))))
     (cell
      1
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell
      0
      (closV
       'fact
       (tagC
        (symbolC 'fact)
        (lamC
         'x
         (ifC
          (equalC (idC 'x) (numC 0))
          (numC 1)
          (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))))
       (list))))
    (list)))
  (joinpoint
   (app-result
    (closV
     'x
     (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
     (list (bind 'f 0)))
    (taggedV
     (symbolV 'fact)
     (closV
      'x
      (ifC
       (equalC (idC 'x) (numC 0))
       (numC 1)
       (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))
      (list (bind 'fact 14)))))
   (list)
   (store
    (list
     (cell
      14
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 13) (bind 'f 0))))
     (cell
      13
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 12 (numV 0))
     (cell 11 (numV 1))
     (cell
      10
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 9) (bind 'f 0))))
     (cell
      9
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 8 (numV 1))
     (cell 7 (numV 2))
     (cell
      6
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 5) (bind 'f 0))))
     (cell
      5
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 4 (numV 2))
     (cell 3 (numV 3))
     (cell
      2
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 1) (bind 'f 0))))
     (cell
      1
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell
      0
      (closV
       'fact
       (tagC
        (symbolC 'fact)
        (lamC
         'x
         (ifC
          (equalC (idC 'x) (numC 0))
          (numC 1)
          (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))))
       (list))))
    (list)))
  (joinpoint
   (app-call
    (taggedV
     (symbolV 'fact)
     (closV
      'x
      (ifC
       (equalC (idC 'x) (numC 0))
       (numC 1)
       (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))
      (list (bind 'fact 14))))
    (numV 0))
   (list)
   (store
    (list
     (cell
      14
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 13) (bind 'f 0))))
     (cell
      13
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 12 (numV 0))
     (cell 11 (numV 1))
     (cell
      10
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 9) (bind 'f 0))))
     (cell
      9
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 8 (numV 1))
     (cell 7 (numV 2))
     (cell
      6
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 5) (bind 'f 0))))
     (cell
      5
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 4 (numV 2))
     (cell 3 (numV 3))
     (cell
      2
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 1) (bind 'f 0))))
     (cell
      1
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell
      0
      (closV
       'fact
       (tagC
        (symbolC 'fact)
        (lamC
         'x
         (ifC
          (equalC (idC 'x) (numC 0))
          (numC 1)
          (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))))
       (list))))
    (list)))
  (joinpoint
   (app-result
    (taggedV
     (symbolV 'fact)
     (closV
      'x
      (ifC
       (equalC (idC 'x) (numC 0))
       (numC 1)
       (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))
      (list (bind 'fact 14))))
    (numV 1))
   (list)
   (store
    (list
     (cell 15 (numV 0))
     (cell
      14
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 13) (bind 'f 0))))
     (cell
      13
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 12 (numV 0))
     (cell 11 (numV 1))
     (cell
      10
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 9) (bind 'f 0))))
     (cell
      9
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 8 (numV 1))
     (cell 7 (numV 2))
     (cell
      6
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 5) (bind 'f 0))))
     (cell
      5
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 4 (numV 2))
     (cell 3 (numV 3))
     (cell
      2
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 1) (bind 'f 0))))
     (cell
      1
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell
      0
      (closV
       'fact
       (tagC
        (symbolC 'fact)
        (lamC
         'x
         (ifC
          (equalC (idC 'x) (numC 0))
          (numC 1)
          (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))))
       (list))))
    (list)))
  (joinpoint
   (app-result
    (closV
     'y
     (appC (appC (idC 'x) (idC 'x)) (idC 'y))
     (list (bind 'x 9) (bind 'f 0)))
    (numV 1))
   (list)
   (store
    (list
     (cell 15 (numV 0))
     (cell
      14
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 13) (bind 'f 0))))
     (cell
      13
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 12 (numV 0))
     (cell 11 (numV 1))
     (cell
      10
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 9) (bind 'f 0))))
     (cell
      9
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 8 (numV 1))
     (cell 7 (numV 2))
     (cell
      6
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 5) (bind 'f 0))))
     (cell
      5
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 4 (numV 2))
     (cell 3 (numV 3))
     (cell
      2
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 1) (bind 'f 0))))
     (cell
      1
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell
      0
      (closV
       'fact
       (tagC
        (symbolC 'fact)
        (lamC
         'x
         (ifC
          (equalC (idC 'x) (numC 0))
          (numC 1)
          (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))))
       (list))))
    (list)))
  (joinpoint
   (app-result
    (taggedV
     (symbolV 'fact)
     (closV
      'x
      (ifC
       (equalC (idC 'x) (numC 0))
       (numC 1)
       (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))
      (list (bind 'fact 10))))
    (numV 1))
   (list)
   (store
    (list
     (cell 15 (numV 0))
     (cell
      14
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 13) (bind 'f 0))))
     (cell
      13
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 12 (numV 0))
     (cell 11 (numV 1))
     (cell
      10
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 9) (bind 'f 0))))
     (cell
      9
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 8 (numV 1))
     (cell 7 (numV 2))
     (cell
      6
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 5) (bind 'f 0))))
     (cell
      5
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 4 (numV 2))
     (cell 3 (numV 3))
     (cell
      2
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 1) (bind 'f 0))))
     (cell
      1
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell
      0
      (closV
       'fact
       (tagC
        (symbolC 'fact)
        (lamC
         'x
         (ifC
          (equalC (idC 'x) (numC 0))
          (numC 1)
          (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))))
       (list))))
    (list)))
  (joinpoint
   (app-result
    (closV
     'y
     (appC (appC (idC 'x) (idC 'x)) (idC 'y))
     (list (bind 'x 5) (bind 'f 0)))
    (numV 1))
   (list)
   (store
    (list
     (cell 15 (numV 0))
     (cell
      14
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 13) (bind 'f 0))))
     (cell
      13
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 12 (numV 0))
     (cell 11 (numV 1))
     (cell
      10
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 9) (bind 'f 0))))
     (cell
      9
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 8 (numV 1))
     (cell 7 (numV 2))
     (cell
      6
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 5) (bind 'f 0))))
     (cell
      5
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 4 (numV 2))
     (cell 3 (numV 3))
     (cell
      2
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 1) (bind 'f 0))))
     (cell
      1
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell
      0
      (closV
       'fact
       (tagC
        (symbolC 'fact)
        (lamC
         'x
         (ifC
          (equalC (idC 'x) (numC 0))
          (numC 1)
          (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))))
       (list))))
    (list)))
  (joinpoint
   (app-result
    (taggedV
     (symbolV 'fact)
     (closV
      'x
      (ifC
       (equalC (idC 'x) (numC 0))
       (numC 1)
       (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))
      (list (bind 'fact 6))))
    (numV 2))
   (list)
   (store
    (list
     (cell 15 (numV 0))
     (cell
      14
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 13) (bind 'f 0))))
     (cell
      13
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 12 (numV 0))
     (cell 11 (numV 1))
     (cell
      10
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 9) (bind 'f 0))))
     (cell
      9
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 8 (numV 1))
     (cell 7 (numV 2))
     (cell
      6
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 5) (bind 'f 0))))
     (cell
      5
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 4 (numV 2))
     (cell 3 (numV 3))
     (cell
      2
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 1) (bind 'f 0))))
     (cell
      1
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell
      0
      (closV
       'fact
       (tagC
        (symbolC 'fact)
        (lamC
         'x
         (ifC
          (equalC (idC 'x) (numC 0))
          (numC 1)
          (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))))
       (list))))
    (list)))
  (joinpoint
   (app-result
    (closV
     'y
     (appC (appC (idC 'x) (idC 'x)) (idC 'y))
     (list (bind 'x 1) (bind 'f 0)))
    (numV 2))
   (list)
   (store
    (list
     (cell 15 (numV 0))
     (cell
      14
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 13) (bind 'f 0))))
     (cell
      13
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 12 (numV 0))
     (cell 11 (numV 1))
     (cell
      10
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 9) (bind 'f 0))))
     (cell
      9
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 8 (numV 1))
     (cell 7 (numV 2))
     (cell
      6
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 5) (bind 'f 0))))
     (cell
      5
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 4 (numV 2))
     (cell 3 (numV 3))
     (cell
      2
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 1) (bind 'f 0))))
     (cell
      1
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell
      0
      (closV
       'fact
       (tagC
        (symbolC 'fact)
        (lamC
         'x
         (ifC
          (equalC (idC 'x) (numC 0))
          (numC 1)
          (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))))
       (list))))
    (list)))
  (joinpoint
   (app-result
    (taggedV
     (symbolV 'fact)
     (closV
      'x
      (ifC
       (equalC (idC 'x) (numC 0))
       (numC 1)
       (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))
      (list (bind 'fact 2))))
    (numV 6))
   (list)
   (store
    (list
     (cell 15 (numV 0))
     (cell
      14
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 13) (bind 'f 0))))
     (cell
      13
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 12 (numV 0))
     (cell 11 (numV 1))
     (cell
      10
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 9) (bind 'f 0))))
     (cell
      9
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 8 (numV 1))
     (cell 7 (numV 2))
     (cell
      6
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 5) (bind 'f 0))))
     (cell
      5
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell 4 (numV 2))
     (cell 3 (numV 3))
     (cell
      2
      (closV
       'y
       (appC (appC (idC 'x) (idC 'x)) (idC 'y))
       (list (bind 'x 1) (bind 'f 0))))
     (cell
      1
      (closV
       'x
       (appC (idC 'f) (lamC 'y (appC (appC (idC 'x) (idC 'x)) (idC 'y))))
       (list (bind 'f 0))))
     (cell
      0
      (closV
       'fact
       (tagC
        (symbolC 'fact)
        (lamC
         'x
         (ifC
          (equalC (idC 'x) (numC 0))
          (numC 1)
          (multC (idC 'x) (appC (idC 'fact) (plusC (idC 'x) (numC -1)))))))
       (list))))
    (list)))))
